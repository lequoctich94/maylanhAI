version: '3.8'

services:
  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: shop_nginx
    restart: unless-stopped
    ports:
      - "8080:80"      # HTTP trên port 8080
      - "8443:443"     # HTTPS trên port 8443
    volumes:
      - ./:/var/www
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - app
    networks:
      - shop_network

  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shop_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./:/var/www
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=shop_db
      - DB_USERNAME=shop_user
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=production
      - APP_DEBUG=false
    depends_on:
      - mysql
      - redis
    networks:
      - shop_network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: shop_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: shop_db
      MYSQL_USER: shop_user
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - shop_mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
    ports:
      - "127.0.0.1:3307:3306"  # MySQL trên port 3307
    networks:
      - shop_network

  # Redis
  redis:
    image: redis:alpine
    container_name: shop_redis
    restart: unless-stopped
    command: redis-server --appendonly yes
    volumes:
      - shop_redis_data:/data
    ports:
      - "127.0.0.1:6380:6379"  # Redis trên port 6380
    networks:
      - shop_network

  # PHPMyAdmin
  phpmyadmin:
    image: phpmyadmin:latest
    container_name: shop_phpmyadmin
    restart: unless-stopped
    environment:
      PMA_HOST: mysql
      PMA_PORT: 3306
      PMA_USER: shop_user
      PMA_PASSWORD: ${DB_PASSWORD}
    ports:
      - "8090:80"  # PHPMyAdmin trên port 8090
    depends_on:
      - mysql
    networks:
      - shop_network

# Docker Networks
networks:
  shop_network:
    driver: bridge
    name: shop_network

# Volumes
volumes:
  shop_mysql_data:
    driver: local
    name: shop_mysql_data
  shop_redis_data:
    driver: local
    name: shop_redis_data 