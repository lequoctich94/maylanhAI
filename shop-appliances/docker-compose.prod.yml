version: '3.8'

services:
  # Nginx Service
  nginx:
    image: nginx:alpine
    container_name: shop_nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./docker/nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./docker/nginx/ssl:/etc/nginx/ssl
      - app_storage:/var/www/storage
      - app_public:/var/www/public
    depends_on:
      - app
    networks:
      - shop_network

  # Laravel Application
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: shop_app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - app_storage:/var/www/storage
      - app_public:/var/www/public
    environment:
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_DATABASE=${DB_DATABASE:-shop_db}
      - DB_USERNAME=${DB_USERNAME:-shop_user}
      - DB_PASSWORD=${DB_PASSWORD}
      - APP_ENV=production
      - APP_DEBUG=false
      - CACHE_STORE=redis
      - SESSION_DRIVER=redis
      - REDIS_HOST=redis
    depends_on:
      - mysql
      - redis
    networks:
      - shop_network

  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: shop_mysql
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE:-shop_db}
      MYSQL_USER: ${DB_USERNAME:-shop_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
      - ./docker/mysql/my.cnf:/etc/mysql/conf.d/custom.cnf
    ports:
      - "127.0.0.1:3306:3306"  # Chỉ bind localhost
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - shop_network

  # Redis
  redis:
    image: redis:alpine
    container_name: shop_redis
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-}
    volumes:
      - redis_data:/data
    ports:
      - "127.0.0.1:6379:6379"  # Chỉ bind localhost
    networks:
      - shop_network

  # Backup service (optional)
  backup:
    image: mysql:8.0
    container_name: shop_backup
    depends_on:
      - mysql
    volumes:
      - ./backups:/backups
      - mysql_data:/var/lib/mysql
    environment:
      MYSQL_HOST: mysql
      MYSQL_DATABASE: ${DB_DATABASE:-shop_db}
      MYSQL_USER: ${DB_USERNAME:-shop_user}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    command: |
      sh -c '
      while true; do
        sleep 86400  # 24 hours
        mysqldump -h mysql -u $$MYSQL_USER -p$$MYSQL_PASSWORD $$MYSQL_DATABASE > /backups/backup_$$(date +%Y%m%d_%H%M%S).sql
        find /backups -name "backup_*.sql" -mtime +7 -delete  # Keep only 7 days
      done
      '
    networks:
      - shop_network
    profiles:
      - backup

# Docker Networks
networks:
  shop_network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Volumes
volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  app_storage:
    driver: local
  app_public:
    driver: local 